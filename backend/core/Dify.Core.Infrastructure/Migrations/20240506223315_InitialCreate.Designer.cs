// <auto-generated />
using System;
using Dify.Core.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dify.Core.Infrastructure.Migrations
{
    [DbContext(typeof(DifyContext))]
    [Migration("20240506223315_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dify.Core.Domain.Entities.Call", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<int?>("CreatedById")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<int?>("DroppedById")
                        .HasColumnType("integer")
                        .HasColumnName("dropped_by_id");

                    b.Property<double>("Duration")
                        .HasColumnType("double precision")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_date");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_calls");

                    b.HasIndex("CreatedById")
                        .HasDatabaseName("ix_calls_created_by_id");

                    b.HasIndex("DroppedById")
                        .HasDatabaseName("ix_calls_dropped_by_id");

                    b.HasIndex("ModifiedById")
                        .HasDatabaseName("ix_calls_modified_by_id");

                    b.ToTable("calls", (string)null);
                });

            modelBuilder.Entity("Dify.Core.Domain.Entities.CallParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<Guid>("CallId")
                        .HasColumnType("uuid")
                        .HasColumnName("call_id");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("text")
                        .HasColumnName("connection_id");

                    b.Property<int>("Direction")
                        .HasColumnType("integer")
                        .HasColumnName("direction");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("joined_at");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("integer")
                        .HasColumnName("participant_id");

                    b.Property<string>("PeerId")
                        .HasColumnType("text")
                        .HasColumnName("peer_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("StreamId")
                        .HasColumnType("text")
                        .HasColumnName("stream_id");

                    b.HasKey("Id")
                        .HasName("pk_call_participants");

                    b.HasIndex("CallId")
                        .HasDatabaseName("ix_call_participants_call_id");

                    b.HasIndex("ParticipantId")
                        .HasDatabaseName("ix_call_participants_participant_id");

                    b.ToTable("call_participants", (string)null);
                });

            modelBuilder.Entity("Dify.Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("avatar_url");

                    b.Property<string>("ConnectionId")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("connection_id");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("integer")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("character varying(125)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("character varying(125)")
                        .HasColumnName("last_name");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("login");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("integer")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("name");

                    b.Property<bool>("Online")
                        .HasColumnType("boolean")
                        .HasColumnName("online");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CreatedById")
                        .HasDatabaseName("ix_users_created_by_id");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasDatabaseName("ix_users_login");

                    b.HasIndex("ModifiedById")
                        .HasDatabaseName("ix_users_modified_by_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Dify.Core.Domain.Entities.Call", b =>
                {
                    b.HasOne("Dify.Core.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .IsRequired()
                        .HasConstraintName("fk_calls_users_created_by_id");

                    b.HasOne("Dify.Core.Domain.Entities.User", "DroppedBy")
                        .WithMany()
                        .HasForeignKey("DroppedById")
                        .HasConstraintName("fk_calls_users_dropped_by_id");

                    b.HasOne("Dify.Core.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("fk_calls_users_modified_by_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("DroppedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Dify.Core.Domain.Entities.CallParticipant", b =>
                {
                    b.HasOne("Dify.Core.Domain.Entities.Call", "Call")
                        .WithMany("Participants")
                        .HasForeignKey("CallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_call_participants_calls_call_id");

                    b.HasOne("Dify.Core.Domain.Entities.User", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId")
                        .IsRequired()
                        .HasConstraintName("fk_call_participants_users_participant_id");

                    b.Navigation("Call");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("Dify.Core.Domain.Entities.User", b =>
                {
                    b.HasOne("Dify.Core.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("fk_users_users_created_by_id1");

                    b.HasOne("Dify.Core.Domain.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("fk_users_users_modified_by_id");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Dify.Core.Domain.Entities.Call", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
